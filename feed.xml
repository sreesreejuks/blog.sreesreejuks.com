<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.sreesreejuks.com/</id><title>Sreeju KS</title><subtitle>A minimalist digital notebook for sharing technical insights, guides, and references on DevOps, cloud computing, and software development.</subtitle> <updated>2025-04-09T20:23:23+05:30</updated> <author> <name>Sreeju KS</name> <uri>https://blog.sreesreejuks.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.sreesreejuks.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://blog.sreesreejuks.com/"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 Sreeju KS </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Fetch vs. Axios: A Deep Dive into JavaScript HTTP Clients</title><link href="https://blog.sreesreejuks.com/Fetch-vs-Axios-A-Deep-Dive-into-JavaScript-HTTP-Clients/" rel="alternate" type="text/html" title="Fetch vs. Axios: A Deep Dive into JavaScript HTTP Clients" /><published>2025-04-09T17:39:00+05:30</published> <updated>2025-04-09T17:39:00+05:30</updated> <id>https://blog.sreesreejuks.com/Fetch-vs-Axios-A-Deep-Dive-into-JavaScript-HTTP-Clients/</id> <content type="text/html" src="https://blog.sreesreejuks.com/Fetch-vs-Axios-A-Deep-Dive-into-JavaScript-HTTP-Clients/" /> <author> <name>sreeju</name> </author> <category term="javascript" /> <category term="web-development" /> <category term="http-clients" /> <summary>Table of Contents Introduction Fetch API: The Modern Approach Basic Usage Handling Errors Advanced Features Axios: A Popular Promise-Based Library Basic Usage Error Handling in Axios Axios Features Fetch vs. Axios: A Comparison Choosing the Right Tool for the Job Conclusion Introduction JavaScript developers often nee...</summary> </entry> <entry><title>AWS Auto Scaling Group Risks: Understanding Desired, Minimum, and Maximum Capacity</title><link href="https://blog.sreesreejuks.com/aws-asg-Understanding-AWS-Auto-Scaling-Group-Capacity-Settings/" rel="alternate" type="text/html" title="AWS Auto Scaling Group Risks: Understanding Desired, Minimum, and Maximum Capacity" /><published>2025-04-07T16:30:00+05:30</published> <updated>2025-04-07T16:30:00+05:30</updated> <id>https://blog.sreesreejuks.com/aws-asg-Understanding-AWS-Auto-Scaling-Group-Capacity-Settings/</id> <content type="text/html" src="https://blog.sreesreejuks.com/aws-asg-Understanding-AWS-Auto-Scaling-Group-Capacity-Settings/" /> <author> <name>sreeju</name> </author> <category term="AWS" /> <category term="Cloud Computing" /> <category term="DevOps" /> <summary>Many engineers new to AWS Auto Scaling Groups (ASGs) make a common mistake: they set the Desired Capacity to a seemingly safe number, often forgetting to configure the Minimum Capacity. This seemingly minor oversight can lead to significant operational issues and unexpected downtime. Let’s explore this crucial aspect of ASG configuration. The Scenario: Desired = 4, Max = 10, Min = Missing Ima...</summary> </entry> <entry><title>Understanding Terraform: Desired State vs. Actual State</title><link href="https://blog.sreesreejuks.com/terraform-desired-vs-actual-state/" rel="alternate" type="text/html" title="Understanding Terraform: Desired State vs. Actual State" /><published>2025-04-03T14:45:00+05:30</published> <updated>2025-04-03T14:45:00+05:30</updated> <id>https://blog.sreesreejuks.com/terraform-desired-vs-actual-state/</id> <content type="text/html" src="https://blog.sreesreejuks.com/terraform-desired-vs-actual-state/" /> <author> <name>sreeju</name> </author> <category term="terraform" /> <category term="cloud" /> <summary>Introduction Imagine you’re building with LEGO blocks. You have a picture of what you want to build (a castle), and you start putting blocks together. The picture is your desired state, and what you’ve built so far is your actual state. Terraform works just like that, but with cloud resources instead of LEGO blocks! What is Desired State? Desired state is like your wish list or blueprint. I...</summary> </entry> <entry><title>12 Logging Best Practices to Save You from 3 AM Debugging</title><link href="https://blog.sreesreejuks.com/Logging-BEST-Practices-in-12-minutes/" rel="alternate" type="text/html" title="12 Logging Best Practices to Save You from 3 AM Debugging" /><published>2025-04-02T14:18:00+05:30</published> <updated>2025-04-02T14:18:00+05:30</updated> <id>https://blog.sreesreejuks.com/Logging-BEST-Practices-in-12-minutes/</id> <content type="text/html" src="https://blog.sreesreejuks.com/Logging-BEST-Practices-in-12-minutes/" /> <author> <name>sreeju</name> </author> <category term="logging" /> <category term="debugging" /> <category term="software-engineering" /> <summary>Table of Contents A Clear Logging Game Plan Understanding Log Levels Structured Logging: The Power of Organization What to Log: Context is King Log Sampling: Cost Optimization Canonical Log Lines: The Whole Story in One Entry Centralized Logging: Aggregation for Efficiency Retention Policies: Managing Log Storage Securing Your Logs: Encryption and Access Control What NOT to...</summary> </entry> <entry><title>cURL Command in Linux: A Comprehensive Guide</title><link href="https://blog.sreesreejuks.com/cURL-Command-in-Linux-A-Comprehensive-Guide/" rel="alternate" type="text/html" title="cURL Command in Linux: A Comprehensive Guide" /><published>2025-03-21T16:48:00+05:30</published> <updated>2025-03-21T16:48:00+05:30</updated> <id>https://blog.sreesreejuks.com/cURL-Command-in-Linux-A-Comprehensive-Guide/</id> <content type="text/html" src="https://blog.sreesreejuks.com/cURL-Command-in-Linux-A-Comprehensive-Guide/" /> <author> <name>sreeju</name> </author> <category term="linux" /> <category term="networking" /> <category term="command-line" /> <summary>Table of Contents Introduction to cURL Basic cURL Usage Specifying HTTP Methods Handling Headers Data Submission with cURL Downloading Files with cURL Uploading Files with cURL Authentication with cURL Advanced cURL Options Troubleshooting Common cURL Errors Introduction to cURL cURL (Client URL) is a powerful command-line tool available on most Linux distributions (and ...</summary> </entry> </feed>
